{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/UI/LoadingSpinner.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","text","QuoteItem","props","item","author","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","focusform","setFocusForm","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NewCommentForm","commentTextRef","params","useParams","onAddedComment","submitFormHandler","quoteid","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetail","selectedQuote","match","useRouteMatch","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f4ba81f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Xa06\",\"loading\":\"QuoteForm_loading__3DgVE\",\"control\":\"QuoteForm_control__1wclR\",\"actions\":\"QuoteForm_actions__1ps_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3pFhU\",\"logo\":\"MainNavigation_logo__1RD63\",\"nav\":\"MainNavigation_nav__3JmNc\",\"active\":\"MainNavigation_active__2GbU3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__38fQZ\",\"loading\":\"NewCommentForm_loading__1E2ic\",\"control\":\"NewCommentForm_control__1FBCV\",\"actions\":\"NewCommentForm_actions__2NKp3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list___c_bq\",\"sorting\":\"QuoteList_sorting__esZkE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__e8Yfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__3-Q1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__16FDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3crgv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3tNdT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3w6JJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__yoAQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3OFrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__Vk1Rp\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quotesappreactrouter-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      text: data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>View Fullscreen</Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation} from 'react-router-dom';\n\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\n//Helper sort function, this function will no re-render in each rendering component\nconst sortedQuotes = (quotes, ascending) =>{\n  return quotes.sort((quoteA, quoteB) =>{\n    if(ascending)\n      return quoteA.id > quoteB.id ? 1 : -1;\n    else\n      return quoteA.id < quoteB.id ? 1 : -1; \n  });\n}\n\nconst QuoteList = (props) => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search)\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortQuotes = sortedQuotes(props.quotes, isSortingAscending);\n\n  function changeSortingHandler() {\n    //We can use this approach when we work with more complex urls!\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`\n    })\n    // history.push(`${location.pathname}?sort=${isSortingAscending ? 'desc' : 'asc'}`);\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n          <button onClick={changeSortingHandler}>\n            Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n          </button>\n      </div>\n      <ul className={classes.list}>\n        {sortQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\n\r\nconst AllQuotes = () =>{\r\n\r\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(()=>{\r\n        sendRequest();\r\n    },[sendRequest])\r\n\r\n    if(status === 'pending'){\r\n        return(\r\n            <div className='centered'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        ) \r\n    }\r\n\r\n    if(status === 'error'){\r\n        return(\r\n            <div className='centered'>\r\n                <p>{error}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n        return(\r\n          <NoQuotesFound />  \r\n        )\r\n    }\r\n\r\n    return(\r\n        <QuoteList quotes={loadedQuotes}/>\r\n    )\r\n\r\n}\r\n\r\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\n  const [focusform, setFocusForm] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  function focusFormHandler(){\n    setFocusForm(true)\n  }\n\n  function finishFocusHandler(){\n    setFocusForm(false)\n  }\n\n  return (\n    <>\n      <Prompt \n        when={focusform}\n        message=\"Are you sure you want to leave?\"   \n      />\n      <Card>\n      <form onFocus={focusFormHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishFocusHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </>\n    \n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n\r\n    const { sendRequest, status} = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n     if(status === 'completed'){\r\n        history.push('/quotes')\r\n     }\r\n    }, [status, history])\r\n\r\n    const addQuoteHandler = (quote) =>{\r\n        sendRequest(quote);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>New quote page</h1>\r\n            <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default NewQuote;","import { useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n\n  const {sendRequest, status, error } = useHttp(addComment);\n  const commentTextRef = useRef();\n  const params = useParams();\n\n  const { onAddedComment } = props;\n  \n  useEffect(() => {\n    if(status === 'completed' && !error){\n      onAddedComment();\n    }\n  }, [onAddedComment, status, error])\n  \n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const requestData = {\n      quoteId: params.quoteid,\n      commentData: commentTextRef.current.value\n    }\n\n    // optional: Could validate here\n\n    sendRequest(requestData)\n    // send comment to server\n\n    commentTextRef.current.value = ''\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n    {status === 'pending' && (<div className='centered'>\n      <LoadingSpinner/>\n    </div>) }\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {sendRequest, status, data: loadedComments} = useHttp(getAllComments, true);\n\n  const params = useParams();\n\n  useEffect(() => {\n    sendRequest(params.quoteid)\n  }, [sendRequest, params])\n  \n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(params.quoteid)\n  }, [sendRequest, params.quoteid])\n\n  let comments;\n\n  if(status === 'pending'){\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if(status === 'completed' && (loadedComments || loadedComments.length > 0)){\n    comments = <CommentsList comments={loadedComments}/>\n  }\n\n  if(status === 'completed' && (!loadedComments || loadedComments.length === 0)){\n    comments = <p className='centered'>No comments were added yet!</p>\n  }\n\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm onAddedComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nconst QuoteDetail = () => {\r\n\r\n    const {sendRequest, status, data: selectedQuote, error} = useHttp(getSingleQuote, true)\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n\r\n    useEffect(()=>{\r\n        sendRequest(params.quoteid)\r\n    }, [ sendRequest, params.quoteid])\r\n\r\n    if(status === 'pending'){\r\n        return(\r\n            <div className='centered'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        ) \r\n    }\r\n\r\n    if(error){\r\n        return(\r\n            <div className='centered'>\r\n                <p>{error}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(!selectedQuote.text){\r\n        return(\r\n          <p>No quote found!</p>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <HighlightedQuote text={selectedQuote.text} author={selectedQuote.author} />\r\n            <Route path={`${match.path}`} exact>\r\n                <div className=\"centered\">\r\n                    <Link className=\"btn--flat\" to={`${match.url}/comments`}>Show Comments</Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`} exact>\r\n                <Comments />\r\n            </Route>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuoteDetail;","import { NavLink } from 'react-router-dom';\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () =>{\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Great Quotes</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li>\r\n                    <NavLink to='/quotes' activeClassName={classes.active}>\r\n                    All Quotes\r\n                    </NavLink>\r\n                    </li>\r\n                    <li>\r\n                    <NavLink to='/new-quote' activeClassName={classes.active}>\r\n                    New Quote\r\n                    </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default MainNavigation;","import classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nconst Layout = (props) =>{\r\n    return(\r\n        <>\r\n            <MainNavigation />\r\n            <main className={classes.main}>{props.children}</main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout;","const NotFound = () =>{\r\n    return(\r\n        <div className=\"centered\">\r\n            <p>Page not found!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { Route, Switch, Redirect } from 'react-router-dom';\nimport AllQuotes from './pages/AllQuotes';\nimport NewQuote from './pages/NewQuote';\nimport QuoteDetail from './pages/QuoteDetail';\nimport Layout from './components/layout/Layout';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='/quotes' />\n        </Route>\n        <Route path='/quotes' exact >\n          <AllQuotes />\n        </Route>\n        <Route path='/quotes/:quoteid'>\n          <QuoteDetail />\n        </Route>\n        <Route path='/new-quote'>\n          <NewQuote />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<BrowserRouter><App /></BrowserRouter>);\n"],"sourceRoot":""}